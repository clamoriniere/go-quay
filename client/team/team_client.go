// Code generated by go-swagger; DO NOT EDIT.

package team

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new team API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for team API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	DeleteOrganizationTeam(params *DeleteOrganizationTeamParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteOrganizationTeamNoContent, error)

	DeleteOrganizationTeamMember(params *DeleteOrganizationTeamMemberParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteOrganizationTeamMemberNoContent, error)

	DeleteTeamMemberEmailInvite(params *DeleteTeamMemberEmailInviteParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteTeamMemberEmailInviteNoContent, error)

	GetOrganizationTeamMembers(params *GetOrganizationTeamMembersParams, authInfo runtime.ClientAuthInfoWriter) (*GetOrganizationTeamMembersOK, error)

	GetOrganizationTeamPermissions(params *GetOrganizationTeamPermissionsParams) (*GetOrganizationTeamPermissionsOK, error)

	InviteTeamMemberEmail(params *InviteTeamMemberEmailParams, authInfo runtime.ClientAuthInfoWriter) (*InviteTeamMemberEmailOK, error)

	UpdateOrganizationTeam(params *UpdateOrganizationTeamParams, authInfo runtime.ClientAuthInfoWriter) (*UpdateOrganizationTeamOK, error)

	UpdateOrganizationTeamMember(params *UpdateOrganizationTeamMemberParams, authInfo runtime.ClientAuthInfoWriter) (*UpdateOrganizationTeamMemberOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  DeleteOrganizationTeam Delete the specified team.
*/
func (a *Client) DeleteOrganizationTeam(params *DeleteOrganizationTeamParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteOrganizationTeamNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteOrganizationTeamParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "deleteOrganizationTeam",
		Method:             "DELETE",
		PathPattern:        "/api/v1/organization/{orgname}/team/{teamname}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteOrganizationTeamReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteOrganizationTeamNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteOrganizationTeam: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteOrganizationTeamMember Delete a member of a team.

        If the user is merely invited to join the team, then the invite is removed instead.
*/
func (a *Client) DeleteOrganizationTeamMember(params *DeleteOrganizationTeamMemberParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteOrganizationTeamMemberNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteOrganizationTeamMemberParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "deleteOrganizationTeamMember",
		Method:             "DELETE",
		PathPattern:        "/api/v1/organization/{orgname}/team/{teamname}/members/{membername}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteOrganizationTeamMemberReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteOrganizationTeamMemberNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteOrganizationTeamMember: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteTeamMemberEmailInvite Delete an invite of an email address to join a team.
*/
func (a *Client) DeleteTeamMemberEmailInvite(params *DeleteTeamMemberEmailInviteParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteTeamMemberEmailInviteNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteTeamMemberEmailInviteParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "deleteTeamMemberEmailInvite",
		Method:             "DELETE",
		PathPattern:        "/api/v1/organization/{orgname}/team/{teamname}/invite/{email}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteTeamMemberEmailInviteReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteTeamMemberEmailInviteNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteTeamMemberEmailInvite: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetOrganizationTeamMembers Retrieve the list of members for the specified team.
*/
func (a *Client) GetOrganizationTeamMembers(params *GetOrganizationTeamMembersParams, authInfo runtime.ClientAuthInfoWriter) (*GetOrganizationTeamMembersOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetOrganizationTeamMembersParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getOrganizationTeamMembers",
		Method:             "GET",
		PathPattern:        "/api/v1/organization/{orgname}/team/{teamname}/members",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetOrganizationTeamMembersReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetOrganizationTeamMembersOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getOrganizationTeamMembers: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetOrganizationTeamPermissions Returns the list of repository permissions for the org's team.
*/
func (a *Client) GetOrganizationTeamPermissions(params *GetOrganizationTeamPermissionsParams) (*GetOrganizationTeamPermissionsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetOrganizationTeamPermissionsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getOrganizationTeamPermissions",
		Method:             "GET",
		PathPattern:        "/api/v1/organization/{orgname}/team/{teamname}/permissions",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetOrganizationTeamPermissionsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetOrganizationTeamPermissionsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getOrganizationTeamPermissions: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InviteTeamMemberEmail Invites an email address to an existing team.
*/
func (a *Client) InviteTeamMemberEmail(params *InviteTeamMemberEmailParams, authInfo runtime.ClientAuthInfoWriter) (*InviteTeamMemberEmailOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInviteTeamMemberEmailParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "inviteTeamMemberEmail",
		Method:             "PUT",
		PathPattern:        "/api/v1/organization/{orgname}/team/{teamname}/invite/{email}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InviteTeamMemberEmailReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InviteTeamMemberEmailOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for inviteTeamMemberEmail: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  UpdateOrganizationTeam Update the org-wide permission for the specified team.
*/
func (a *Client) UpdateOrganizationTeam(params *UpdateOrganizationTeamParams, authInfo runtime.ClientAuthInfoWriter) (*UpdateOrganizationTeamOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpdateOrganizationTeamParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "updateOrganizationTeam",
		Method:             "PUT",
		PathPattern:        "/api/v1/organization/{orgname}/team/{teamname}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &UpdateOrganizationTeamReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*UpdateOrganizationTeamOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for updateOrganizationTeam: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  UpdateOrganizationTeamMember Adds or invites a member to an existing team.
*/
func (a *Client) UpdateOrganizationTeamMember(params *UpdateOrganizationTeamMemberParams, authInfo runtime.ClientAuthInfoWriter) (*UpdateOrganizationTeamMemberOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpdateOrganizationTeamMemberParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "updateOrganizationTeamMember",
		Method:             "PUT",
		PathPattern:        "/api/v1/organization/{orgname}/team/{teamname}/members/{membername}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &UpdateOrganizationTeamMemberReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*UpdateOrganizationTeamMemberOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for updateOrganizationTeamMember: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
