// Code generated by go-swagger; DO NOT EDIT.

package trigger

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/clamoriniere/go-quay/models"
)

// UpdateBuildTriggerReader is a Reader for the UpdateBuildTrigger structure.
type UpdateBuildTriggerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateBuildTriggerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateBuildTriggerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateBuildTriggerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateBuildTriggerUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateBuildTriggerForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateBuildTriggerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateBuildTriggerOK creates a UpdateBuildTriggerOK with default headers values
func NewUpdateBuildTriggerOK() *UpdateBuildTriggerOK {
	return &UpdateBuildTriggerOK{}
}

/*UpdateBuildTriggerOK handles this case with default header values.

Successful invocation
*/
type UpdateBuildTriggerOK struct {
}

func (o *UpdateBuildTriggerOK) Error() string {
	return fmt.Sprintf("[PUT /api/v1/repository/{repository}/trigger/{trigger_uuid}][%d] updateBuildTriggerOK ", 200)
}

func (o *UpdateBuildTriggerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateBuildTriggerBadRequest creates a UpdateBuildTriggerBadRequest with default headers values
func NewUpdateBuildTriggerBadRequest() *UpdateBuildTriggerBadRequest {
	return &UpdateBuildTriggerBadRequest{}
}

/*UpdateBuildTriggerBadRequest handles this case with default header values.

Bad Request
*/
type UpdateBuildTriggerBadRequest struct {
	Payload *models.APIError
}

func (o *UpdateBuildTriggerBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v1/repository/{repository}/trigger/{trigger_uuid}][%d] updateBuildTriggerBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateBuildTriggerBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *UpdateBuildTriggerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateBuildTriggerUnauthorized creates a UpdateBuildTriggerUnauthorized with default headers values
func NewUpdateBuildTriggerUnauthorized() *UpdateBuildTriggerUnauthorized {
	return &UpdateBuildTriggerUnauthorized{}
}

/*UpdateBuildTriggerUnauthorized handles this case with default header values.

Session required
*/
type UpdateBuildTriggerUnauthorized struct {
	Payload *models.APIError
}

func (o *UpdateBuildTriggerUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v1/repository/{repository}/trigger/{trigger_uuid}][%d] updateBuildTriggerUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateBuildTriggerUnauthorized) GetPayload() *models.APIError {
	return o.Payload
}

func (o *UpdateBuildTriggerUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateBuildTriggerForbidden creates a UpdateBuildTriggerForbidden with default headers values
func NewUpdateBuildTriggerForbidden() *UpdateBuildTriggerForbidden {
	return &UpdateBuildTriggerForbidden{}
}

/*UpdateBuildTriggerForbidden handles this case with default header values.

Unauthorized access
*/
type UpdateBuildTriggerForbidden struct {
	Payload *models.APIError
}

func (o *UpdateBuildTriggerForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v1/repository/{repository}/trigger/{trigger_uuid}][%d] updateBuildTriggerForbidden  %+v", 403, o.Payload)
}

func (o *UpdateBuildTriggerForbidden) GetPayload() *models.APIError {
	return o.Payload
}

func (o *UpdateBuildTriggerForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateBuildTriggerNotFound creates a UpdateBuildTriggerNotFound with default headers values
func NewUpdateBuildTriggerNotFound() *UpdateBuildTriggerNotFound {
	return &UpdateBuildTriggerNotFound{}
}

/*UpdateBuildTriggerNotFound handles this case with default header values.

Not found
*/
type UpdateBuildTriggerNotFound struct {
	Payload *models.APIError
}

func (o *UpdateBuildTriggerNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v1/repository/{repository}/trigger/{trigger_uuid}][%d] updateBuildTriggerNotFound  %+v", 404, o.Payload)
}

func (o *UpdateBuildTriggerNotFound) GetPayload() *models.APIError {
	return o.Payload
}

func (o *UpdateBuildTriggerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
