// Code generated by go-swagger; DO NOT EDIT.

package trigger

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new trigger API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for trigger API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	ActivateBuildTrigger(params *ActivateBuildTriggerParams, authInfo runtime.ClientAuthInfoWriter) (*ActivateBuildTriggerCreated, error)

	DeleteBuildTrigger(params *DeleteBuildTriggerParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteBuildTriggerNoContent, error)

	GetBuildTrigger(params *GetBuildTriggerParams, authInfo runtime.ClientAuthInfoWriter) (*GetBuildTriggerOK, error)

	ListBuildTriggers(params *ListBuildTriggersParams, authInfo runtime.ClientAuthInfoWriter) (*ListBuildTriggersOK, error)

	ListTriggerRecentBuilds(params *ListTriggerRecentBuildsParams, authInfo runtime.ClientAuthInfoWriter) (*ListTriggerRecentBuildsOK, error)

	ManuallyStartBuildTrigger(params *ManuallyStartBuildTriggerParams, authInfo runtime.ClientAuthInfoWriter) (*ManuallyStartBuildTriggerCreated, error)

	UpdateBuildTrigger(params *UpdateBuildTriggerParams, authInfo runtime.ClientAuthInfoWriter) (*UpdateBuildTriggerOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  ActivateBuildTrigger Activate the specified build trigger.
*/
func (a *Client) ActivateBuildTrigger(params *ActivateBuildTriggerParams, authInfo runtime.ClientAuthInfoWriter) (*ActivateBuildTriggerCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewActivateBuildTriggerParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "activateBuildTrigger",
		Method:             "POST",
		PathPattern:        "/api/v1/repository/{repository}/trigger/{trigger_uuid}/activate",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ActivateBuildTriggerReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ActivateBuildTriggerCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for activateBuildTrigger: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteBuildTrigger Delete the specified build trigger.
*/
func (a *Client) DeleteBuildTrigger(params *DeleteBuildTriggerParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteBuildTriggerNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteBuildTriggerParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "deleteBuildTrigger",
		Method:             "DELETE",
		PathPattern:        "/api/v1/repository/{repository}/trigger/{trigger_uuid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteBuildTriggerReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteBuildTriggerNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteBuildTrigger: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetBuildTrigger Get information for the specified build trigger.
*/
func (a *Client) GetBuildTrigger(params *GetBuildTriggerParams, authInfo runtime.ClientAuthInfoWriter) (*GetBuildTriggerOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetBuildTriggerParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getBuildTrigger",
		Method:             "GET",
		PathPattern:        "/api/v1/repository/{repository}/trigger/{trigger_uuid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetBuildTriggerReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetBuildTriggerOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getBuildTrigger: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ListBuildTriggers List the triggers for the specified repository.
*/
func (a *Client) ListBuildTriggers(params *ListBuildTriggersParams, authInfo runtime.ClientAuthInfoWriter) (*ListBuildTriggersOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewListBuildTriggersParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "listBuildTriggers",
		Method:             "GET",
		PathPattern:        "/api/v1/repository/{repository}/trigger/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ListBuildTriggersReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ListBuildTriggersOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for listBuildTriggers: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ListTriggerRecentBuilds List the builds started by the specified trigger.
*/
func (a *Client) ListTriggerRecentBuilds(params *ListTriggerRecentBuildsParams, authInfo runtime.ClientAuthInfoWriter) (*ListTriggerRecentBuildsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewListTriggerRecentBuildsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "listTriggerRecentBuilds",
		Method:             "GET",
		PathPattern:        "/api/v1/repository/{repository}/trigger/{trigger_uuid}/builds",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ListTriggerRecentBuildsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ListTriggerRecentBuildsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for listTriggerRecentBuilds: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ManuallyStartBuildTrigger Manually start a build from the specified trigger.
*/
func (a *Client) ManuallyStartBuildTrigger(params *ManuallyStartBuildTriggerParams, authInfo runtime.ClientAuthInfoWriter) (*ManuallyStartBuildTriggerCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewManuallyStartBuildTriggerParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "manuallyStartBuildTrigger",
		Method:             "POST",
		PathPattern:        "/api/v1/repository/{repository}/trigger/{trigger_uuid}/start",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ManuallyStartBuildTriggerReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ManuallyStartBuildTriggerCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for manuallyStartBuildTrigger: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  UpdateBuildTrigger Updates the specified build trigger.
*/
func (a *Client) UpdateBuildTrigger(params *UpdateBuildTriggerParams, authInfo runtime.ClientAuthInfoWriter) (*UpdateBuildTriggerOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpdateBuildTriggerParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "updateBuildTrigger",
		Method:             "PUT",
		PathPattern:        "/api/v1/repository/{repository}/trigger/{trigger_uuid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &UpdateBuildTriggerReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*UpdateBuildTriggerOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for updateBuildTrigger: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
