// Code generated by go-swagger; DO NOT EDIT.

package trigger

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/clamoriniere/go-quay/models"
)

// NewUpdateBuildTriggerParams creates a new UpdateBuildTriggerParams object
// with the default values initialized.
func NewUpdateBuildTriggerParams() *UpdateBuildTriggerParams {
	var ()
	return &UpdateBuildTriggerParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateBuildTriggerParamsWithTimeout creates a new UpdateBuildTriggerParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateBuildTriggerParamsWithTimeout(timeout time.Duration) *UpdateBuildTriggerParams {
	var ()
	return &UpdateBuildTriggerParams{

		timeout: timeout,
	}
}

// NewUpdateBuildTriggerParamsWithContext creates a new UpdateBuildTriggerParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateBuildTriggerParamsWithContext(ctx context.Context) *UpdateBuildTriggerParams {
	var ()
	return &UpdateBuildTriggerParams{

		Context: ctx,
	}
}

// NewUpdateBuildTriggerParamsWithHTTPClient creates a new UpdateBuildTriggerParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateBuildTriggerParamsWithHTTPClient(client *http.Client) *UpdateBuildTriggerParams {
	var ()
	return &UpdateBuildTriggerParams{
		HTTPClient: client,
	}
}

/*UpdateBuildTriggerParams contains all the parameters to send to the API endpoint
for the update build trigger operation typically these are written to a http.Request
*/
type UpdateBuildTriggerParams struct {

	/*Body
	  Request body contents.

	*/
	Body *models.UpdateTrigger
	/*Repository
	  The full path of the repository. e.g. namespace/name

	*/
	Repository string
	/*TriggerUUID
	  The UUID of the build trigger

	*/
	TriggerUUID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update build trigger params
func (o *UpdateBuildTriggerParams) WithTimeout(timeout time.Duration) *UpdateBuildTriggerParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update build trigger params
func (o *UpdateBuildTriggerParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update build trigger params
func (o *UpdateBuildTriggerParams) WithContext(ctx context.Context) *UpdateBuildTriggerParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update build trigger params
func (o *UpdateBuildTriggerParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update build trigger params
func (o *UpdateBuildTriggerParams) WithHTTPClient(client *http.Client) *UpdateBuildTriggerParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update build trigger params
func (o *UpdateBuildTriggerParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the update build trigger params
func (o *UpdateBuildTriggerParams) WithBody(body *models.UpdateTrigger) *UpdateBuildTriggerParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the update build trigger params
func (o *UpdateBuildTriggerParams) SetBody(body *models.UpdateTrigger) {
	o.Body = body
}

// WithRepository adds the repository to the update build trigger params
func (o *UpdateBuildTriggerParams) WithRepository(repository string) *UpdateBuildTriggerParams {
	o.SetRepository(repository)
	return o
}

// SetRepository adds the repository to the update build trigger params
func (o *UpdateBuildTriggerParams) SetRepository(repository string) {
	o.Repository = repository
}

// WithTriggerUUID adds the triggerUUID to the update build trigger params
func (o *UpdateBuildTriggerParams) WithTriggerUUID(triggerUUID string) *UpdateBuildTriggerParams {
	o.SetTriggerUUID(triggerUUID)
	return o
}

// SetTriggerUUID adds the triggerUuid to the update build trigger params
func (o *UpdateBuildTriggerParams) SetTriggerUUID(triggerUUID string) {
	o.TriggerUUID = triggerUUID
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateBuildTriggerParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param repository
	if err := r.SetPathParam("repository", o.Repository); err != nil {
		return err
	}

	// path param trigger_uuid
	if err := r.SetPathParam("trigger_uuid", o.TriggerUUID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
