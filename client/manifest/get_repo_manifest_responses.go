// Code generated by go-swagger; DO NOT EDIT.

package manifest

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/clamoriniere/go-quay/models"
)

// GetRepoManifestReader is a Reader for the GetRepoManifest structure.
type GetRepoManifestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRepoManifestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRepoManifestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRepoManifestBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetRepoManifestUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRepoManifestForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRepoManifestNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRepoManifestOK creates a GetRepoManifestOK with default headers values
func NewGetRepoManifestOK() *GetRepoManifestOK {
	return &GetRepoManifestOK{}
}

/*GetRepoManifestOK handles this case with default header values.

Successful invocation
*/
type GetRepoManifestOK struct {
}

func (o *GetRepoManifestOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/repository/{repository}/manifest/{manifestref}][%d] getRepoManifestOK ", 200)
}

func (o *GetRepoManifestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRepoManifestBadRequest creates a GetRepoManifestBadRequest with default headers values
func NewGetRepoManifestBadRequest() *GetRepoManifestBadRequest {
	return &GetRepoManifestBadRequest{}
}

/*GetRepoManifestBadRequest handles this case with default header values.

Bad Request
*/
type GetRepoManifestBadRequest struct {
	Payload *models.APIError
}

func (o *GetRepoManifestBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v1/repository/{repository}/manifest/{manifestref}][%d] getRepoManifestBadRequest  %+v", 400, o.Payload)
}

func (o *GetRepoManifestBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetRepoManifestBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRepoManifestUnauthorized creates a GetRepoManifestUnauthorized with default headers values
func NewGetRepoManifestUnauthorized() *GetRepoManifestUnauthorized {
	return &GetRepoManifestUnauthorized{}
}

/*GetRepoManifestUnauthorized handles this case with default header values.

Session required
*/
type GetRepoManifestUnauthorized struct {
	Payload *models.APIError
}

func (o *GetRepoManifestUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/repository/{repository}/manifest/{manifestref}][%d] getRepoManifestUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRepoManifestUnauthorized) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetRepoManifestUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRepoManifestForbidden creates a GetRepoManifestForbidden with default headers values
func NewGetRepoManifestForbidden() *GetRepoManifestForbidden {
	return &GetRepoManifestForbidden{}
}

/*GetRepoManifestForbidden handles this case with default header values.

Unauthorized access
*/
type GetRepoManifestForbidden struct {
	Payload *models.APIError
}

func (o *GetRepoManifestForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/repository/{repository}/manifest/{manifestref}][%d] getRepoManifestForbidden  %+v", 403, o.Payload)
}

func (o *GetRepoManifestForbidden) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetRepoManifestForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRepoManifestNotFound creates a GetRepoManifestNotFound with default headers values
func NewGetRepoManifestNotFound() *GetRepoManifestNotFound {
	return &GetRepoManifestNotFound{}
}

/*GetRepoManifestNotFound handles this case with default header values.

Not found
*/
type GetRepoManifestNotFound struct {
	Payload *models.APIError
}

func (o *GetRepoManifestNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/repository/{repository}/manifest/{manifestref}][%d] getRepoManifestNotFound  %+v", 404, o.Payload)
}

func (o *GetRepoManifestNotFound) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetRepoManifestNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
